# ðŸ”® MPBL Tea Auction Price Prediction AI (Colab + Google Sheets)

"""
ðŸŽ¯ OBJECTIVE:
Create a Google Colab script that loads historical weekly tea auction data (2018â€“2025) from a Google Sheet,
trains high-accuracy ML models (XGBoost + BiLSTM) for each elevation, and predicts the next sale's average price per elevation.
Then save the predictions and model results into another Google Sheet in a well-organized format.

ðŸ“Š SOURCE SHEET:
- Google Sheet Name: "Elevation Avg"
- Tab Name: "Data"
- Columns: YEAR, SALENO, ELEVATION, QTY, AVG
- This contains historical weekly average prices for all tea elevations.

ðŸ“¤ DESTINATION SHEET:
- Google Sheet Name: "External Data"
- Required Tabs:
    1. "Next Sale Predictions" â€” Columns: ELEVATION, XGBoost Prediction, BiLSTM Prediction, Final Prediction
    2. "Model Accuracy" â€” Columns: ELEVATION, XGB RÂ², XGB RMSE, BiLSTM RÂ², BiLSTM RMSE
    3. "Prediction Logs" â€” Optional: For timestamp, errors, or notes

ðŸ§  MODEL REQUIREMENTS:
- Train and evaluate XGBoost and BiLSTM models per elevation
- Use advanced features like:
    - Previous average prices (lags)
    - Moving averages (e.g., 3-sale, 5-sale)
    - Quantity-to-price ratios
    - Sale number or week as time feature
    - Previous price change (%) or trend
- Perform hyperparameter tuning for better accuracy
- Ensemble model output by averaging or weighted method
- Evaluate models using RÂ² and RMSE

ðŸ’¾ INTEGRATION:
- Authenticate using Google Colab's auth system:
    from google.auth import default
    creds, _ = default()
    gc = gspread.authorize(creds)

- Load from "Elevation Avg" > "Data"
- Save results to "External Data" with required tabs

âœ… REQUIREMENTS:
- Highly accurate and reliable predictions for next sale (e.g., if last entry is 2025 Sale 1, predict Sale 2)
- Clean, readable, well-commented code
- Modular design: separate functions for data loading, feature engineering, model training, prediction, and saving
- Automatically overwrite old predictions in "External Data" when rerun

ðŸ“Œ TASK:
Write the full Python code in Google Colab with all above features implemented. Use pandas, XGBoost, TensorFlow/Keras, and gspread.

"""
